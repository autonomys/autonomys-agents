services:
  autonomys-agent-${CHARACTER_NAME:-character.example}:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        CHARACTER_NAME: ${CHARACTER_NAME:-character.example}
    platform: linux/amd64
    image: autonomys-agent-${CHARACTER_NAME:-character.example}:${TAG:-latest}
    container_name: autonomys-agent-${CHARACTER_NAME:-character.example}
    environment:
      - CHARACTER_NAME=${CHARACTER_NAME:-character.example}
    volumes:
        # Cookies and Character-specific volumes - unique per character
      - agent_cookies_${CHARACTER_NAME:-character.example}:/app/.cookies
      - agent_data_${CHARACTER_NAME:-character.example}:/app/characters/${CHARACTER_NAME:-character.example}/data
      - agent_logs_${CHARACTER_NAME:-character.example}:/app/characters/${CHARACTER_NAME:-character.example}/logs
      - agent_memories_${CHARACTER_NAME:-character.example}:/app/characters/${CHARACTER_NAME:-character.example}/memories
    ports:
      # Host port 3011 maps to container port 3011
      - "${HOST_PORT:-3011}:${API_PORT:-3011}"
    restart: unless-stopped
    healthcheck:
      # Health check using the correct port
      test: ["CMD", "sh", "-c", "if [ \"$$ENABLE_AUTH\" = \"true\" ] || [ \"$$ENABLE_AUTH\" = \"TRUE\" ]; then curl -k -f -H \"Authorization: Bearer $$API_TOKEN\" https://localhost:${API_PORT:-3011}/health || exit 1; else curl -k -f https://localhost:${API_PORT:-3011}/health || exit 1; fi"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    # Run container with non-privileged security options
    security_opt:
      - no-new-privileges:true

volumes:
  agent_cookies_${CHARACTER_NAME:-character.example}:
  agent_data_${CHARACTER_NAME:-character.example}:
  agent_logs_${CHARACTER_NAME:-character.example}:
  agent_memories_${CHARACTER_NAME:-character.example}: